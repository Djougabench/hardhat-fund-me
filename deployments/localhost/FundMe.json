{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc83276e5ed85b8aead61cec903aa9dc85c99db58b2ffaf1d8ba1272ab443c11b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "895198",
    "logsBloom": "0x
    "blockHash": "0xc145f6ce42f49d0c783b63cbf29863493238d95739f0c43e5909fecbc504df5a",
    "transactionHash": "0xc83276e5ed85b8aead61cec903aa9dc85c99db58b2ffaf1d8ba1272ab443c11b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "895198",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "dac863a7d9846d32be4be1e85d6507c8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n   \\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\\n\",\"keccak256\":\"0xf7090e09e5742a61db67b34579c1504a8cb0c9e72da78531c2c45f149dc72ad4\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x1fb8e58fafcbb2bd43ba529c467cf6dbc2ffa2b37d273856f25e78bf28a44c95\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000fc338038062000fc38339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610e67806200015c6000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b6100956102d6565b005b3480156100a357600080fd5b506100be60048036038101906100b9919061079f565b610518565b6040516100cb91906107e5565b60405180910390f35b3480156100e057600080fd5b506100e9610530565b6040516100f691906107e5565b60405180910390f35b34801561010b57600080fd5b5061011461053d565b604051610121919061085f565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b50610149610563565b6040516101569190610889565b60405180910390f35b34801561016b57600080fd5b50610186600480360381019061018191906108d0565b610589565b6040516101939190610889565b60405180910390f35b6802b5e3af16b18800006101db600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c890919063ffffffff16565b101561021c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102139061095a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026a91906109a9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035d576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561040857600060018281548110610383576103826109ff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040090610a2e565b915050610360565b50600067ffffffffffffffff81111561042457610423610a77565b5b6040519080825280602002602001820160405280156104525781602001602082028036833780820191505090505b5060019080519060200190610468929190610695565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048f90610ad7565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610b38565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061059957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d483610604565b90506000670de0b6b3a764000085836105ed9190610b58565b6105f79190610be1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610652573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106769190610c9f565b5050509150506402540be4008161068d9190610d1a565b915050919050565b82805482825590600052602060002090810192821561070e579160200282015b8281111561070d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b5565b5b50905061071b919061071f565b5090565b5b80821115610738576000816000905550600101610720565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076c82610741565b9050919050565b61077c81610761565b811461078757600080fd5b50565b60008135905061079981610773565b92915050565b6000602082840312156107b5576107b461073c565b5b60006107c38482850161078a565b91505092915050565b6000819050919050565b6107df816107cc565b82525050565b60006020820190506107fa60008301846107d6565b92915050565b6000819050919050565b600061082561082061081b84610741565b610800565b610741565b9050919050565b60006108378261080a565b9050919050565b60006108498261082c565b9050919050565b6108598161083e565b82525050565b60006020820190506108746000830184610850565b92915050565b61088381610761565b82525050565b600060208201905061089e600083018461087a565b92915050565b6108ad816107cc565b81146108b857600080fd5b50565b6000813590506108ca816108a4565b92915050565b6000602082840312156108e6576108e561073c565b5b60006108f4848285016108bb565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610944601b836108fd565b915061094f8261090e565b602082019050919050565b6000602082019050818103600083015261097381610937565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b4826107cc565b91506109bf836107cc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109f4576109f361097a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a39826107cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a6c57610a6b61097a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ac1600083610aa6565b9150610acc82610ab1565b600082019050919050565b6000610ae282610ab4565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b22600b836108fd565b9150610b2d82610aec565b602082019050919050565b60006020820190508181036000830152610b5181610b15565b9050919050565b6000610b63826107cc565b9150610b6e836107cc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ba757610ba661097a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bec826107cc565b9150610bf7836107cc565b925082610c0757610c06610bb2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3181610c12565b8114610c3c57600080fd5b50565b600081519050610c4e81610c28565b92915050565b6000819050919050565b610c6781610c54565b8114610c7257600080fd5b50565b600081519050610c8481610c5e565b92915050565b600081519050610c99816108a4565b92915050565b600080600080600060a08688031215610cbb57610cba61073c565b5b6000610cc988828901610c3f565b9550506020610cda88828901610c75565b9450506040610ceb88828901610c8a565b9350506060610cfc88828901610c8a565b9250506080610d0d88828901610c3f565b9150509295509295909350565b6000610d2582610c54565b9150610d3083610c54565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d6f57610d6e61097a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dac57610dab61097a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610de957610de861097a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e2657610e2561097a565b5b82820290509291505056fea2646970667358221220dd8cae5860093ca773644c9e15cc8165cbcbc93884bea570e15aa903f29a58ee64736f6c634300080c0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b6100956102d6565b005b3480156100a357600080fd5b506100be60048036038101906100b9919061079f565b610518565b6040516100cb91906107e5565b60405180910390f35b3480156100e057600080fd5b506100e9610530565b6040516100f691906107e5565b60405180910390f35b34801561010b57600080fd5b5061011461053d565b604051610121919061085f565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b50610149610563565b6040516101569190610889565b60405180910390f35b34801561016b57600080fd5b50610186600480360381019061018191906108d0565b610589565b6040516101939190610889565b60405180910390f35b6802b5e3af16b18800006101db600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c890919063ffffffff16565b101561021c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102139061095a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026a91906109a9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035d576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561040857600060018281548110610383576103826109ff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040090610a2e565b915050610360565b50600067ffffffffffffffff81111561042457610423610a77565b5b6040519080825280602002602001820160405280156104525781602001602082028036833780820191505090505b5060019080519060200190610468929190610695565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048f90610ad7565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610b38565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061059957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d483610604565b90506000670de0b6b3a764000085836105ed9190610b58565b6105f79190610be1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610652573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106769190610c9f565b5050509150506402540be4008161068d9190610d1a565b915050919050565b82805482825590600052602060002090810192821561070e579160200282015b8281111561070d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b5565b5b50905061071b919061071f565b5090565b5b80821115610738576000816000905550600101610720565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076c82610741565b9050919050565b61077c81610761565b811461078757600080fd5b50565b60008135905061079981610773565b92915050565b6000602082840312156107b5576107b461073c565b5b60006107c38482850161078a565b91505092915050565b6000819050919050565b6107df816107cc565b82525050565b60006020820190506107fa60008301846107d6565b92915050565b6000819050919050565b600061082561082061081b84610741565b610800565b610741565b9050919050565b60006108378261080a565b9050919050565b60006108498261082c565b9050919050565b6108598161083e565b82525050565b60006020820190506108746000830184610850565b92915050565b61088381610761565b82525050565b600060208201905061089e600083018461087a565b92915050565b6108ad816107cc565b81146108b857600080fd5b50565b6000813590506108ca816108a4565b92915050565b6000602082840312156108e6576108e561073c565b5b60006108f4848285016108bb565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610944601b836108fd565b915061094f8261090e565b602082019050919050565b6000602082019050818103600083015261097381610937565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b4826107cc565b91506109bf836107cc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109f4576109f361097a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a39826107cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a6c57610a6b61097a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ac1600083610aa6565b9150610acc82610ab1565b600082019050919050565b6000610ae282610ab4565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b22600b836108fd565b9150610b2d82610aec565b602082019050919050565b60006020820190508181036000830152610b5181610b15565b9050919050565b6000610b63826107cc565b9150610b6e836107cc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ba757610ba661097a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bec826107cc565b9150610bf7836107cc565b925082610c0757610c06610bb2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3181610c12565b8114610c3c57600080fd5b50565b600081519050610c4e81610c28565b92915050565b6000819050919050565b610c6781610c54565b8114610c7257600080fd5b50565b600081519050610c8481610c5e565b92915050565b600081519050610c99816108a4565b92915050565b600080600080600060a08688031215610cbb57610cba61073c565b5b6000610cc988828901610c3f565b9550506020610cda88828901610c75565b9450506040610ceb88828901610c8a565b9350506060610cfc88828901610c8a565b9250506080610d0d88828901610c3f565b9150509295509295909350565b6000610d2582610c54565b9150610d3083610c54565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d6f57610d6e61097a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dac57610dab61097a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610de957610de861097a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e2657610e2561097a565b5b82820290509291505056fea2646970667358221220dd8cae5860093ca773644c9e15cc8165cbcbc93884bea570e15aa903f29a58ee64736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}